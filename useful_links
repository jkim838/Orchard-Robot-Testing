Depth Processing with Two Cameras

> Distance measuring based on stereoscopic pictures (Jernej Mrovlje,  Damir Vrančić) 2008, http://dsc.ijs.si/files/papers/S101%20Mrovlje.pdf

ROS basics

ROS package for passing data from camera device to processing https://wiki.ros.org/image_proc 

>OpenCV triangulation tutorials http://www.morethantechnical.com/2012/01/04/simple-triangulation-with-opencv-from-harley-zisserman-w-code/

>http://www.morethantechnical.com/2015/03/16/bootstrapping-planar-ar-tracking-without-markers-wcode/

AForge example with two webcams http://www.aforgenet.com/articles/step_to_stereo_vision/
>Maybe not usable but might be a good example for general method
    
OpenCV tutorial 
>https://www.learnopencv.com/image-recognition-and-object-detection-part1/
TRY THIS IF ABOVE DOESN'T WORK>https://pypi.org/project/opencv-python/ 

TensorFlow Tutorial for Object Detection
>https://www.youtube.com/watch?v=COlbP62-B-U
>https://answers.ros.org/question/228940/integrating-tensorflow-into-ros/

ROS-generator (?) -- to resolve update issues on PIP
> https://ubuntu.pkgs.org/18.10/ubuntu-universe-i386/python-rosinstall-generator_0.1.14-1_all.deb.html
Launchpad thing
> https://launchpad.net/ubuntu/xenial/i386/python-launchpadlib/1.10.3-3
>https://launchpad.net/ubuntu/bionic/amd64/python-testresources/2.0.0-2

Training TensorFlow Object Detection Tutorial
p3>https://www.youtube.com/watch?v=K_mFnvzyLvc
p4>https://www.youtube.com/watch?v=kq2Gjv_pPe8
p5>https://www.youtube.com/watch?v=JR8CmWyh2E8
p6>https://www.youtube.com/watch?v=srPndLNMMpk&index=6&list=PLQVvvaa0QuDcNK5GeCQnxYnSSaar2tpku

openCV to ROS package
>https://wiki.ros.org/vision_opencv

ROS + OpenCV tutorial
>http://projectsfromtech.blogspot.com/2017/10/visual-object-recognition-in-ros-using.html

More tutorials for computer vision - openCV
>https://www.intorobotics.com/how-to-detect-and-track-object-with-opencv/

Explanation (not too dry) about deep neural networks (has different types)
>https://www.learnopencv.com/neural-networks-a-30000-feet-view-for-beginners/

Example of ROS object detect with 2D or 3D (looks for people in this case)
>https://github.com/cagbal/ros_people_object_detection_tensorflow
>https://www.codeproject.com/Articles/1268309/%2fArticles%2f1268309%2fAdding-Object-Detection-with-TensorFlow-to-a-Robot

code example
>www.github.com/shinselrobots

Good image showing concept for realsense -> ROS + openCV
https://wiki.ros.org/IntelROSProject

ROS node for tensorflow
>https://github.com/osrf/tensorflow_object_detector

Self flying Drone (some tensorflow info)
>https://medium.com/nanonets/how-i-built-a-self-flying-drone-to-track-people-in-under-50-lines-of-code-7485de7f828e

Using RealSense Camera for OpenCV
>http://answers.opencv.org/question/52374/interface-intel-realsense-camera/

Depth realsense algorithim python
>https://stackoverflow.com/questions/50802333/calculating-distance-from-intel-realsense-r200-depth-camera
>https://github.com/intel/intel-iot-refkit/blob/master/meta-refkit-extra/doc/computervision.rst
